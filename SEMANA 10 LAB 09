SEMANA 10 - LABORATORIO 09 - ETHAN ARREDONDO
EJERCICIO 01
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Lista con Imágenes y Fuentes',
      theme: ThemeData(
        primaryColor: Color.fromARGB(255, 255, 245, 100),
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Lista con Imágenes y Fuentes'),
      ),
      body: ListView(
        children: [
          _buildListItem(
            category: 'Alimentos',
            image: 'assets/images/manzana.png',
            fontFamily: 'OpenSans', 
            itemName: 'Manzana',
          ),
          _buildListItem(
            category: 'Alimentos',
            image: 'assets/images/pera.png',
            fontFamily: 'OpenSans', 
            itemName: 'Pera',
          ),
          _buildListItem(
            category: 'Alimentos',
            image: 'assets/images/naranja.png',
            fontFamily: 'OpenSans', 
            itemName: 'Naranja',
          ),
          _buildListItem(
            category: 'Animales',
            image: 'https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQgByBT5IiAT_a2x9pUVb4VMoOrlzHH7Jrzj-HB5jzHlR4lNLMS',
            fontFamily: 'Lato', 
            itemName: 'Perro',
          ),
          _buildListItem(
            category: 'Lugares',
            image: 'https://marketingsimulator.net/rcondorena/wp-content/uploads/sites/744/2019/06/Lima-una-ciudad-para-Cementos-Inka-672x372.png',
            fontFamily: 'Ubuntu', 
            itemName: 'Lima',
          ),
        ],
      ),
    );
  }

  Widget _buildListItem({
    required String category,
    required String image,
    required String fontFamily,
    required String itemName,
  }) {
    return ListTile(
      leading: CircleAvatar(
        backgroundImage: _getImageProvider(image),
      ),
      title: Text(
        itemName,
        style: TextStyle(
          fontFamily: fontFamily,
          fontSize: 16.0,
          fontWeight: FontWeight.bold,
        ),
      ),
      subtitle: Text(category),
    );
  }

  ImageProvider _getImageProvider(String imagePath) {
    if (imagePath.startsWith('http')) {
      return NetworkImage(imagePath);
    } else {
      return AssetImage(imagePath);
    }
  }
}

EJERCICIO 02
class ProductDetails extends StatelessWidget {
  final List<Product> products = [
    Product(
      name: 'PlayStation 5',
      price: 'S/.3000.99',
      description: 'Esta es una PlayStation 5',
      image: 'assets/images/producto1.png',
    ),
    Product(
      name: 'Xbox Series X',
      price: 'S/.2800.99',
      description: 'Esta es una Xbox Series X',
      image: 'assets/images/producto2.png',
    ),
    Product(
      name: 'Nintendo Switch',
      price: 'S/.1500.99',
      description: 'Esta es una Nintendo Switch',
      image: 'assets/images/producto3.png',
    )
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Detalles del Producto'),
      ),
      body: ListView.builder(
        padding: const EdgeInsets.all(16.0),
        itemCount: products.length,
        itemBuilder: (context, index) {
          final product = products[index];
          return Padding(
            padding: const EdgeInsets.only(bottom: 16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: <Widget>[
                Image.asset(
                  product.image,
                  height: 200,
                ),
                SizedBox(height: 16),
                Text(
                  product.name,
                  style: TextStyle(
                    fontFamily: 'Montserrat',
                    fontSize: 24,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                SizedBox(height: 8),
                Text(
                  product.price,
                  style: TextStyle(
                    fontFamily: 'Roboto',
                    fontSize: 20,
                    color: Colors.green,
                  ),
                ),
                SizedBox(height: 8),
                Text(
                  product.description,
                  style: TextStyle(
                    fontFamily: 'Nunito',
                    fontSize: 16,
                  ),
                ),
              ],
            ),
          );
        },
      ),
    );
  }
}
  
class Product {
  final String name;
  final String price;
  final String description;
  final String image;

  Product({
    required this.name,
    required this.price,
    required this.description,
    required this.image,
  });
}

EJERCICIO 03
class ImageGallery extends StatelessWidget {
  final List<ImageData> images = [
    ImageData(
      name: 'Imagen PNG',
      path: 'assets/images/naruto.png',
      type: ImageType.png,
    ),
    ImageData(
      name: 'Imagen JPEG',
      path: 'assets/images/naruto.jpeg',
      type: ImageType.jpeg,
    ),
    ImageData(
      name: 'Imagen SVG',
      path: 'assets/images/naruto.svg',
      type: ImageType.svg,
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Galería de Imágenes'),
      ),
      body: ListView.builder(
        itemCount: images.length,
        itemBuilder: (context, index) {
          final image = images[index];
          return Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                _buildImage(image),
                SizedBox(height: 8),
                Text(
                  image.name,
                  style: TextStyle(
                    fontFamily: _getFontFamily(image.type),
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ],
            ),
          );
        },
      ),
    );
  }

  Widget _buildImage(ImageData image) {
    switch (image.type) {
      case ImageType.png:
      case ImageType.jpeg:
        return Image.asset(image.path, height: 200);
      case ImageType.svg:
        return SvgPicture.asset(image.path, height: 200);
    }
  }

  String _getFontFamily(ImageType type) {
    switch (type) {
      case ImageType.png:
        return 'Arial';
      case ImageType.jpeg:
        return 'TimesRoman';
      case ImageType.svg:
        return 'Roboto';
    }
  }
}

class ImageData {
  final String name;
  final String path;
  final ImageType type;

  ImageData({
    required this.name,
    required this.path,
    required this.type,
  });
}

enum ImageType { png, jpeg, svg }
